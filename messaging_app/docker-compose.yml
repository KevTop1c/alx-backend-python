services:
  db:
    image: mysql:8.0
    container_name: messaging_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE:  ${MYSQL_DB}
      MYSQL_USER:  ${MYSQL_USER}
      MYSQL_PASSWORD:  ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD:  ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - messaging_network

  web:
    build: .
    container_name: messaging_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
    depends_on:
      - db
    volumes:
      - .:/app
    networks:
      - messaging_network
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            python manage.py runserver 0.0.0.0:8000 --noreload"

volumes:
  mysql_data:

networks:
  messaging_network:
    driver: bridge