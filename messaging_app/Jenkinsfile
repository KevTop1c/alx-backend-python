pipeline {
    agent any
    
    environment {
        VENV_PATH = "${WORKSPACE}/venv"
    }
    
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-credentials', 
                    url: 'https://github.com/KevTop1c/alx-backend-python.git', 
                    branch: 'main'
            }
        }
        
        stage('Setup Python Environment') {
            steps {
                sh '''
                    # Check Python availability
                    python3 --version || python --version
                    # Create virtual environment
                    python3 -m venv $VENV_PATH || python -m venv $VENV_PATH
                    . $VENV_PATH/bin/activate
                    pip install --upgrade pip
                '''
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '''
                    . $VENV_PATH/bin/activate
                    pip install -r requirements.txt
                    pip install pytest pytest-html
                '''
            }
        }
        
        stage('Run Tests') {
            steps {
                sh '''
                    . $VENV_PATH/bin/activate
                    python -m pytest tests/ -v --html=test-report.html --self-contained-html
                    
                    # Also generate JUnit XML report for better Jenkins integration
                    python -m pytest tests/ -v --junitxml=junit-report.xml
                '''
            }
            post {
                always {
                    // Publish HTML report
                    publishHTML([
                        allowMissing: true,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: '.',
                        reportFiles: 'test-report.html',
                        reportName: 'Pytest HTML Report'
                    ])
                    
                    // Publish JUnit test results
                    junit 'junit-report.xml'
                }
            }
        }
    }
    
    post {
        always {
            echo "Build completed - ${currentBuild.result}"
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline execution failed!'
        }
    }
}